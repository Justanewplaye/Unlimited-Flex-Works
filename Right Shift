-- âœ… Force HttpService to allow external requests (Fixes executor restrictions)
pcall(function()
    setfflag("HttpService", "true")
    setfflag("AllowHttpRequests", "true")
end)

local UserInputService = game:GetService("UserInputService")

-- âœ… Check if the device is Mobile
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- ðŸš€ If running on PC, show message and stop execution
if not isMobile then
    local gui = Instance.new("ScreenGui")
    gui.Parent = game:GetService("CoreGui")

    local messageFrame = Instance.new("Frame")
    messageFrame.Size = UDim2.new(0, 400, 0, 150)
    messageFrame.Position = UDim2.new(0.5, -200, 0.5, -75)
    messageFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    messageFrame.BorderSizePixel = 2
    messageFrame.Parent = gui

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0.3, 0)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    titleLabel.TextSize = 24
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.Text = "Dumbass"
    titleLabel.Parent = messageFrame

    local reasonLabel = Instance.new("TextLabel")
    reasonLabel.Size = UDim2.new(1, 0, 0.7, 0)
    reasonLabel.Position = UDim2.new(0, 0, 0.3, 0)
    reasonLabel.BackgroundTransparency = 1
    reasonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    reasonLabel.TextSize = 18
    reasonLabel.Font = Enum.Font.SourceSans
    reasonLabel.Text = "Reason: Dude you aren't a mobile player, why are you executing this on PC?\nExecute this on a mobile or iOS device please."
    reasonLabel.TextWrapped = true
    reasonLabel.Parent = messageFrame

    -- ðŸš€ Remove the message after 5 seconds
    task.delay(5, function()
        gui:Destroy()
    end)

    return  -- Stop the script here on PC
end

-- âœ… Auto-Detect Workspace Directory (For Mobile)
local function getWorkspacePath()
    if getcustomasset then
        return "workspace/"
    elseif isfolder and isfile then
        return "autoexec/"
    else
        return "./"
    end
end

local workspacePath = getWorkspacePath()
local imageFileName = "shift_icon.png"
local imagePath = workspacePath .. imageFileName

-- âœ… Image URL (Raw from GitHub)
local imageUrl = "https://raw.githubusercontent.com/Justanewplaye/Unlimited-Flex-Works/refs/heads/main/12e40e625eb48f14b4765cf26fc2993c.png"

-- âœ… Function to check and download the image
local function fetchAndStoreImage()
    if isfile(imagePath) then
        return true
    end

    local requestFunction = http_request or request
    if not requestFunction then
        return false
    end

    local response = requestFunction({Url = imageUrl, Method = "GET"})
    if response and response.StatusCode == 200 then
        if not isfolder(workspacePath) then
            makefolder(workspacePath)
        end
        writefile(imagePath, response.Body)
        return true
    else
        return false
    end
end

-- âœ… Function to Load Image from File
local function loadImageAsset()
    if isfile(imagePath) then
        if getcustomasset then
            return getcustomasset(imagePath)
        else
            return "file://" .. imagePath
        end
    else
        return nil
    end
end

-- âœ… Create GUI for Mobile
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ShiftEmulatorGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = game:GetService("CoreGui")

-- ðŸ”¥ Main Button (Shift Emulator)
local button = Instance.new("ImageButton")
button.Name = "ShiftButton"
button.Size = UDim2.new(0, 75, 0, 75)

-- ðŸ”¥ Adjusted Position to Be Closer to the Red Arrow Tip
button.Position = UDim2.new(0.02, 0, 0.65, 0)  

button.BackgroundTransparency = 1
button.ScaleType = Enum.ScaleType.Fit
button.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0.3, 0)
uiCorner.Parent = button

spawn(function()
    if fetchAndStoreImage() then
        local imageAsset = loadImageAsset()
        if imageAsset then
            button.Image = imageAsset
            button.ScaleType = Enum.ScaleType.Fit
        end
    end
end)

-- âœ… Right Shift Emulator Function
local function emulateRightShift()
    local VirtualInputManager = game:GetService("VirtualInputManager")
    if VirtualInputManager then
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.RightShift, false, nil)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.RightShift, false, nil)
    end
end

button.MouseButton1Click:Connect(function()
    emulateRightShift()
end)
